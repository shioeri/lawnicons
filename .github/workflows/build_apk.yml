name: Build APK

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: write sign info
        run: |
          if [ ! -z "${{ secrets.KEYSTORE_CONTENT }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE_CONTENT }} | base64 --decode > key.jks
          fi

      - name: prepare prebuild
        run: |
          chmod +x gradlew
          ./gradlew svg-processor:run

      - name: build with gradle
        run: |
          ./gradlew app:assembleRelease

      - name: checking release version
        id: version
        run: |
          echo ::set-output name=release_version::$(cat app/build.gradle.kts  | grep -o "versionName = \"[0-9.]*\"" | grep -o "[0-9.]*")
          echo ::set-output name=release_patch::$(git rev-parse --short HEAD)

      - name: rename apks
        run: |
          APK="lawn_icons_v${{ steps.version.outputs.release_version }}_${{ steps.version.outputs.release_patch }}.apk"
          mv -f app/build/outputs/apk/app/release/*.apk app/build/outputs/apk/app/release/$APK

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Release apk
          path: app/build/outputs/apk/app/release/*.apk

      - uses: andreaswilli/delete-release-assets-action@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: Prerelease
          deleteOnlyFromDrafts: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: richardsimko/update-tag@v1.0.7
        with:
          tag_name: Prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: Prerelease
          files: app/build/outputs/apk/app/release/*.apk
          draft: false
          prerelease: true
          generate_release_notes: true

      # - name: upload to telegram
        # if: ${{  success() }}
        # env:
          # CHAT_ID: "-1001597117128"
          # MESSAGE_THREAD_ID: "282263"
          # API_HASH: ${{ secrets.API_HASH }}
          # API_ID: ${{ secrets.API_ID }}
          # BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        # run: |
          # if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            # export VERSION="lawn_icons_v${{ steps.version.outputs.release_version }}_${{ steps.version.outputs.release_patch }}"
            # export COMMIT=$(git log --oneline -n 10 --no-decorate | sed 's/^[0-9a-f]* //' | sed 's/^/â€” /')
            # FILE=$(find ./app/build/outputs/apk/app/release -name "*.apk")
            # pip3 install telethon==1.31.1
            # python3 $GITHUB_WORKSPACE/.github/taamarinbot.py $FILE
          # fi